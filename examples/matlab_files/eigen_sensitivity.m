clear all;
clc;

syms K_ppll1 K_ppll2 K_ppll3 K_ppll4 K_ppll5 K_ipll1 K_ipll2 K_ipll3 K_ipll4 K_ipll5 k_1 k_2 k_3 k_4 k_5
A = [
    0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    -0.223496473839761, 0.0564068710130581, 0.0338670221003969, 0.116602460067713, ...
    0.0166201206585932, -0.500000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    -0.0643757471775111.*k_1, -0.0682212712203505.*k_2, -0.075091991006962.*k_3, ...
    -0.083893985745252.*k_4, -0.0896508973284055.*k_5, 0, 0, 0, 0, 0, ...
    0.0128710864569284, 0.00170031609651019, 0.00187294551415458, ...
    0.00838450996710153, 0.0115702579075296, 0;
    0.0393101268476161, -0.117067000706192, 0.0332518384307648, 0.0231381564285114, ...
    0.0213668789992995, 0, -0.307692307692308, 0, 0, 0, 0, 0, 0, 0, 0, ...
    -0.00851279286203014.*k_1, -0.00727021216723136.*k_2, -0.00593655117327481.*k_3, ...
    -0.0056679061268868.*k_4, -0.00630574400239127.*k_5, 0, 0, 0, 0, 0, ...
    0.00170202130027300, 0.000181199478577002, 0.000148069544307372, ...
    0.000566460336713324, 0.000813813208575749, 0;
    0.0260394802803184, 0.0434338512132139, -0.121775483792226, 0.0292767389146421, ...
    0.0230254133840521, 0, 0, -0.400000000000000, 0, 0, 0, 0, 0, 0, 0, ...
    -0.0122385846106446.*k_1, -0.0110682156857735.*k_2, -0.0100289394765943.*k_3, ...
    -0.0102572224787871.*k_4, -0.0113466608101135.*k_5, 0, 0, 0, 0, 0, ...
    0.00244694450224680, 0.000275859199829061, 0.000250141951924986, ...
    0.00102512454670251, 0.00146438904544768, 0;
    0.0952639505823510, 0.0315592787926148, 0.0282988220039002, -0.188085475701892, ...
    0.0329634243230259, 0, 0, 0, -0.400000000000000, 0, 0, 0, 0, 0, 0, ...
    -0.00311745659623354.*k_1, -0.00765013371330302.*k_2, -0.00941672815242173.*k_3, ...
    -0.00564104336082198.*k_4, 0.0042365933185048.*k_5, 0, 0, 0, 0, 0, ...
    0.000623294565656877, 0.000190668471292048, 0.000234872168317607, ...
    0.000563775625433801, -0.000546770627011737, 0;
    0.0115714095251542, 0.0278612325446139, 0.0230270161898618, 0.0343328436464109, ...
    -0.0967925019060406, 0, 0, 0, 0, -0.400000000000000, 0, 0, 0, 0, 0, ...
    -0.0196093536195978.*k_1, -0.0160521443481243.*k_2, -0.0134095207484205.*k_3, ...
    -0.0142204812072206.*k_4, -0.0181678046441665.*k_5, 0, 0, 0, 0, 0, ...
    0.00392063310902428, 0.000400076382781901, 0.000334460458378156, ...
    0.00142121947550536, 0.00234471925670305, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.991118430775, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0.508527083902642.*K_ipll1, 0.117048084325013.*K_ipll1, ...
    0.116362779975737.*K_ipll1, 0.0319943621996886.*K_ipll1, ...
    0.201088807676024.*K_ipll1, 0, 0, 0, 0, 0, -0.975021118079104.*K_ipll1, 0, 0, 0, ...
    0, -0.0893136189490206.*K_ipll1.*k_1 - 367.574301798266.*K_ppll1, ...
    -0.0124716449184148.*K_ipll1.*k_2, 0.0645414377690612.*K_ipll1.*k_3, ...
    0.0786046908533239.*K_ipll1.*k_4, 0.0562004039101461.*K_ipll1.*k_5, 0, 0, 0, 0, ...
    0, 0.0178570868949167.*K_ipll1, 0.000310837635028041.*K_ipll1, ...
    -0.00160979346433154.*K_ipll1, -0.00785588869173412.*K_ipll1, ...
    -0.00725316965167391.*K_ipll1, 0;
    0.525337795739973.*K_ipll2, 0.104148722881518.*K_ipll2, ...
    0.104598651295885.*K_ipll2, 0.0918730434871732.*K_ipll2, ...
    0.159379450371905.*K_ipll2, 0, 0, 0, 0, 0, 0, -0.985337663776453.*K_ipll2, 0, 0, ...
    0, -0.018920462082852.*K_ipll2.*k_1, -0.0856744388794099.*K_ipll2.*k_2 - ...
    371.463547899052.*K_ppll2, 0.049785389276732.*K_ipll2.*k_3, ...
    0.0686235250514605.*K_ipll2.*k_4, 0.0807174749476108.*K_ipll2.*k_5, 0, 0, 0, 0, ...
    0, 0.00378289828002956.*K_ipll2, 0.00213531095038705.*K_ipll2, ...
    -0.00124174789169793.*K_ipll2, -0.00685835372655633.*K_ipll2, ...
    -0.0104173190745354.*K_ipll2, 0;
    0.580285524031524.*K_ipll3, 0.0858535905767208.*K_ipll3, ...
    0.0905749040410778.*K_ipll3, 0.117159011092775.*K_ipll3, ...
    0.120736477794535.*K_ipll3, 0, 0, 0, 0, 0, 0, 0, -0.994609507536633.*K_ipll3, 0, ...
    0, 0.0626427842350752.*K_ipll3.*k_1, 0.0520490150214547.*K_ipll3.*k_2, ...
    -0.0895963613058633.*K_ipll3.*k_3 - 374.958950648118.*K_ppll3, ...
    0.0303467733797311.*K_ipll3.*k_4, 0.100590997981135.*K_ipll3.*k_5, 0, 0, 0, 0, ...
    0, -0.012524603241794.*K_ipll3, -0.00129724610030545.*K_ipll3, ...
    0.00223471372568656.*K_ipll3, -0.00303290899355234.*K_ipll3, ...
    -0.012982176693158.*K_ipll3, 0;
    0.589510222827994.*K_ipll4, 0.0794952143642062.*K_ipll4, ...
    0.0864443207515534.*K_ipll4, 0.0829408682618058.*K_ipll4, ...
    0.121839002545505.*K_ipll4, 0, 0, 0, 0, 0, 0, 0, 0, -0.960229628751063.*K_ipll4, ...
    0, 0.0665456164453495.*K_ipll4.*k_1, 0.0611869557262896.*K_ipll4.*k_2, ...
    0.0211702979676684.*K_ipll4.*k_3, 0.00304973450026489.*K_ipll4.*k_4 - ...
    361.998041693231.*K_ppll4, 0.090606601805536.*K_ipll4.*k_5, 0, 0, 0, 0, 0, ...
    -0.013304923362457.*K_ipll4, -0.00152499599988152.*K_ipll4, ...
    -0.000528029874826255.*K_ipll4, -0.000304795738184742.*K_ipll4, ...
    -0.0116936002009511.*K_ipll4, 0;
    0.576894869199706.*K_ipll5, 0.0861122765830712.*K_ipll5, ...
    0.0938371533229741.*K_ipll5, -0.00810850535824226.*K_ipll5, ...
    0.161876875866495.*K_ipll5, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    -0.910612669614003.*K_ipll5, 0.0337875117771988.*K_ipll5.*k_1, ...
    0.0614906795953826.*K_ipll5.*k_2, 0.075863909285459.*K_ipll5.*k_3, ...
    0.0776554305854384.*K_ipll5.*k_4, -0.0655807193948981.*K_ipll5.*k_5 - ...
    343.292888775017.*K_ppll5, 0, 0, 0, 0, 0, -0.00675536990739168.*K_ipll5, ...
    -0.00153256587617194.*K_ipll5, -0.0018921987109019.*K_ipll5, ...
    -0.00776101797952803.*K_ipll5, 0.00846378407547607.*K_ipll5, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.00000000000000, ...
    1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -3.00000000000000, 1.00000000000000, 0, 0, 0, ...
    1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -2.00000000000000, 0, 0, 0, 0, 1.00000000000000, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, 0, ...
    0, 0, 0, -1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    0, 0, 0, 0, -1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00100000000000, -1/10;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 1, 0
];

des_val = 60;

k_1_val = des_val;
K_ipll1_val = 1.7;
K_ppll1_val = 0.1;
k_2_val = des_val;
K_ipll2_val = 1.7;
K_ppll2_val = 0.1;
k_3_val = des_val;
K_ipll3_val = 1.7;
K_ppll3_val = 0.1;
k_4_val = des_val;
K_ipll4_val = 1.7;
K_ppll4_val = 0.1;
k_5_val = des_val;
K_ipll5_val = 1.7;
K_ppll5_val = 0.1;

A_sub = subs(A, [K_ipll1, K_ppll1, K_ipll2, K_ppll2, K_ipll3, K_ppll3, K_ipll4, K_ppll4, K_ipll5, K_ppll5], [K_ipll1_val, K_ppll1_val, K_ipll2_val, K_ppll2_val, K_ipll3_val, K_ppll3_val, K_ipll4_val, K_ppll4_val, K_ipll5_val, K_ppll5_val]);
A_sub_full = subs(A, [k_1, K_ipll1, K_ppll1, k_2, K_ipll2, K_ppll2, k_3, K_ipll3, K_ppll3, k_4, K_ipll4, K_ppll4, k_5, K_ipll5, K_ppll5], [k_1_val, K_ipll1_val, K_ppll1_val, k_2_val, K_ipll2_val, K_ppll2_val, k_3_val, K_ipll3_val, K_ppll3_val, k_4_val, K_ipll4_val, K_ppll4_val, k_5_val, K_ipll5_val, K_ppll5_val]);
A_numeric_full = double(A_sub_full);
%%
A_sub_1 = subs(A_sub, [k_2,k_3,k_4,k_5], [k_2_val,k_3_val,k_4_val,k_5_val]);
A_sub_2 = subs(A_sub, [k_1,k_3,k_4,k_5], [k_1_val,k_3_val,k_4_val,k_5_val]);
A_sub_3 = subs(A_sub, [k_1,k_2,k_4,k_5], [k_1_val,k_2_val,k_4_val,k_5_val]);
A_sub_4 = subs(A_sub, [k_1,k_2,k_3,k_5], [k_1_val,k_2_val,k_3_val,k_5_val]);
A_sub_5 = subs(A_sub, [k_1,k_2,k_3,k_4], [k_1_val,k_2_val,k_3_val,k_4_val]);



[V,D,W] = eig(A_numeric_full);
max(max(abs(W'*A_numeric_full - D*W')))
max(max(abs(A_numeric_full*V - V*D)))

A_sub_1_k1 = diff(A_sub_1,k_1);
A_sub_1_k1_val = double(A_sub_1_k1); %double(subs(A_sub_1_k1, k_1, k_1_val));

A_sub_2_k2 = diff(A_sub_2,k_2);
A_sub_2_k2_val = double(A_sub_2_k2); %double(subs(A_sub_1_k1, k_1, k_1_val));

A_sub_3_k3 = diff(A_sub_3,k_3);
A_sub_3_k3_val = double(A_sub_3_k3); %double(subs(A_sub_1_k1, k_1, k_1_val));

A_sub_4_k4 = diff(A_sub_4,k_4);
A_sub_4_k4_val = double(A_sub_4_k4); %double(subs(A_sub_1_k1, k_1, k_1_val));

A_sub_5_k5 = diff(A_sub_5,k_5);
A_sub_5_k5_val = double(A_sub_5_k5); %double(subs(A_sub_1_k1, k_1, k_1_val));

sens_k = zeros(31,5);
norm_vector = diag(W'*V);
for j=1:31
    sens_k(j,1) = (W(:,j))'*A_sub_1_k1_val*V(:,j)/norm_vector(j);
    sens_k(j,2) = (W(:,j))'*A_sub_2_k2_val*V(:,j)/norm_vector(j);
    sens_k(j,3) = (W(:,j))'*A_sub_3_k3_val*V(:,j)/norm_vector(j);
    sens_k(j,4) = (W(:,j))'*A_sub_4_k4_val*V(:,j)/norm_vector(j);
    sens_k(j,5) = (W(:,j))'*A_sub_5_k5_val*V(:,j)/norm_vector(j);
end


clear all;
clc;

syms K_ppll1 K_ppll2 K_ppll3 K_ppll4 K_ppll5 K_ipll1 K_ipll2 K_ipll3 K_ipll4 K_ipll5 k_1 k_2 k_3 k_4 k_5
A = [
    0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    -0.205999091843304, 0.0624246494185353, 0.0393853482594166, 0.129809831481141, ...
    0.0265005606640136, -0.500000000000000, 0, 0, 0, 0, -0.0211144850284216, ...
    -0.00262024840299067, -0.00257390491248112, -0.0107140578899387, ...
    -0.0150986017459712, -0.0714223367155435.*k_1, -0.0755556500310917.*k_2, ...
    -0.0783336919406821.*k_3, -0.0875622156297299.*k_4, -0.0954944543531128.*k_5, 0, ...
    0, 0, 0, 0, 0.0142799596296221, 0.00188311483547721, 0.00195380006522753, ...
    0.00875111920320837, 0.0123244217127790, 0;
    0.0367112150559232, -0.118760301959816, 0.0331450485776494, 0.0222433687748622, ...
    0.0204866181505854, 0, -0.307692307692308, 0, 0, 0, 0.00255365368441169, ...
    0.000315666068124023, 0.000310495328989505, 0.00126214144080430, ...
    0.00173209487846646, -0.00790366056562655.*k_1, -0.00673001692444928.*k_2, ...
    -0.00571510719616531.*k_3, -0.00541066854128539.*k_4, -0.00583099671924742.*k_5, ...
    0, 0, 0, 0, 0, 0.00158023328546209, 0.000167735896762557, 0.000142546285461761, ...
    0.000540751567708863, 0.000752542784401949, 0;
    0.0241043429341608, 0.0438061424795908, -0.122566926204287, 0.0286687241112002, ...
    0.0225234294311449, 0, 0, -0.400000000000000, 0, 0, 0.00148420726548823, ...
    0.000177505510973529, 0.000169766664569864, 0.000681364275000415, ...
    0.000951443532158113, -0.0117828755106188.*k_1, -0.0106987822404143.*k_2, ...
    -0.00975705585871221.*k_3, -0.00994970517657358.*k_4, -0.0109091364441463.*k_5, ...
    0, 0, 0, 0, 0, 0.00235583144363690, 0.000266651607790728, 0.000243360626837507, ...
    0.000994390735898780, 0.00140792257488325, 0;
    0.0880517601061930, 0.0280552491467297, 0.0248427379550789, -0.196289215813077, ...
    0.0272439042222453, 0, 0, 0, -0.400000000000000, 0, 0.0110817687283212, ...
    0.00145450962774860, 0.00152510434783267, 0.00613816531558082, ...
    0.00789601636334723, 0.000523941069431398.*k_1, -0.00422959459404352.*k_2, ...
    -0.00780881602651707.*k_3, -0.00383085526864304.*k_4, 0.00716877917268582.*k_5, ...
    0, 0, 0, 0, 0, -0.000104755146132780, 0.000105416501940225, ...
    0.000194767601066371, 0.000382862298138920, -0.000925195691084519, 0;
    0.0103185731683052, 0.0278025391537520, 0.0227758215451198, 0.0334407952788461, ...
    -0.0975656642176567, 0, 0, 0, 0, -0.400000000000000, 0.00167331065043331, ...
    0.000149034618750040, 9.17883380656647e-5, 0.000402765442352153, ...
    0.000911036022032268, -0.0189188932630358.*k_1, -0.0155083714517621.*k_2, ...
    -0.0128955595624164.*k_3, -0.013642516887781.*k_4, -0.0174057611092467.*k_5, 0, ...
    0, 0, 0, 0, 0.00378258461508001, 0.000386523633148370, 0.000321641231122793, ...
    0.00136345672226480, 0.00224637065676110, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0.461891357428065.*K_ipll1, 0.0958997265007685.*K_ipll1, ...
    0.0959344353415881.*K_ipll1, -0.00333723921242099.*K_ipll1, ...
    0.167776687075434.*K_ipll1, 0, 0, 0, 0, 0, -0.905290510542444.*K_ipll1, ...
    0.00784659440360342.*K_ipll1, 0.00715116818727914.*K_ipll1, ...
    0.0296761200412192.*K_ipll1, 0.0424516607769093.*K_ipll1, ...
    -0.070220226338154.*K_ipll1.*k_1 - 366.38031508608.*K_ppll1, ...
    0.00515954928220215.*K_ipll1.*k_2, 0.0711362615919307.*K_ipll1.*k_3, ...
    0.0857431559858955.*K_ipll1.*k_4, 0.0693520252498216.*K_ipll1.*k_5, 0, 0, 0, 0, ...
    0, 0.0140396134235347.*K_ipll1, -0.000128594271820736.*K_ipll1, ...
    -0.00177428165448404.*K_ipll1, -0.00856931923770435.*K_ipll1, ...
    -0.00895050515345702.*K_ipll1, 0;
    0.491759714495398.*K_ipll2, 0.078732448374212.*K_ipll2, ...
    0.0813811948216261.*K_ipll2, 0.0446296913102957.*K_ipll2, ...
    0.123043624885206.*K_ipll2, 0, 0, 0, 0, 0, 0.0663419174755368.*K_ipll2, ...
    -0.970120440827101.*K_ipll2, 0.0077623107269137.*K_ipll2, ...
    0.0319370772279545.*K_ipll2, 0.0445324615099598.*K_ipll2, ...
    0.00622258637605905.*K_ipll2.*k_1, -0.0619525278019847.*K_ipll2.*k_2 - ...
    368.980598660953.*K_ppll2, 0.0630776487085726.*K_ipll2.*k_3, ...
    0.0832027868168665.*K_ipll2.*k_4, 0.101953532041484.*K_ipll2.*k_5, 0, 0, 0, 0, ...
    0, -0.00124412454602065.*K_ipll2, 0.00154407677190552.*K_ipll2, ...
    -0.00157328361664011.*K_ipll2, -0.00831543035128859.*K_ipll2, ...
    -0.0131580240182358.*K_ipll2, 0;
    0.526099010908441.*K_ipll3, 0.0633236924531874.*K_ipll3, ...
    0.0687063185081983.*K_ipll3, 0.0825921158213161.*K_ipll3, ...
    0.0847449811655949.*K_ipll3, 0, 0, 0, 0, 0, 0.0668876285540778.*K_ipll3, ...
    0.00838440062912045.*K_ipll3, -0.98386807461948.*K_ipll3, ...
    0.0355906522204985.*K_ipll3, 0.0475392743590477.*K_ipll3, ...
    0.080658016617258.*K_ipll3.*k_1, 0.069075269470238.*K_ipll3.*k_2, ...
    -0.0843414302933711.*K_ipll3.*k_3 - 374.721512544198.*K_ppll3, ...
    0.0357295115058896.*K_ipll3.*k_4, 0.111916435899934.*K_ipll3.*k_5, 0, 0, 0, 0, ...
    0, -0.0161265127139024.*K_ipll3, -0.00172160076249047.*K_ipll3, ...
    0.00210364516118243.*K_ipll3, -0.00357086914728872.*K_ipll3, ...
    -0.0144438267328246.*K_ipll3, 0;
    0.532560433828013.*K_ipll4, 0.0564467672754434.*K_ipll4, ...
    0.064060962885864.*K_ipll4, 0.0482273807712889.*K_ipll4, ...
    0.0849568077350493.*K_ipll4, 0, 0, 0, 0, 0, 0.0680669763099795.*K_ipll4, ...
    0.00845905180741178.*K_ipll4, 0.00868056559664281.*K_ipll4, ...
    -0.921276473403366.*K_ipll4, 0.0498175271936738.*K_ipll4, ...
    0.0844169651778032.*K_ipll4.*k_1, 0.0779853627603558.*K_ipll4.*k_2, ...
    0.0256798374044928.*K_ipll4.*k_3, 0.00807035894394788.*K_ipll4.*k_4 - ...
    361.7429819121.*K_ppll4, 0.101728837119642.*K_ipll4.*k_5, 0, 0, 0, 0, 0, ...
    -0.01687806518562.*K_ipll4, -0.00194367189619394.*K_ipll4, ...
    -0.000640506871984583.*K_ipll4, -0.00080656562449052.*K_ipll4, ...
    -0.0131290251094274.*K_ipll4, 0;
    0.516263166834368.*K_ipll5, 0.0634553753436187.*K_ipll5, ...
    0.0716050182659454.*K_ipll5, -0.0414798878853849.*K_ipll5, ...
    0.1250039093121.*K_ipll5, 0, 0, 0, 0, 0, 0.067034552562239.*K_ipll5, ...
    0.00824988924241845.*K_ipll5, 0.00814115850551052.*K_ipll5, ...
    0.034901031313874.*K_ipll5, -0.853174213494688.*K_ipll5, ...
    0.0506917164299543.*K_ipll5.*k_1, 0.0770934445362255.*K_ipll5.*k_2, ...
    0.0790966591742637.*K_ipll5.*k_3, 0.0812404613209861.*K_ipll5.*k_4, ...
    -0.0543062135582574.*K_ipll5.*k_5 - 342.789406526136.*K_ppll5, 0, 0, 0, 0, 0, ...
    -0.0101351439544607.*K_ipll5, -0.0019214421299329.*K_ipll5, ...
    -0.00197283000488449.*K_ipll5, -0.00811931214886026.*K_ipll5, ...
    0.00700870728096251.*K_ipll5, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.00000000000000, ...
    1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -3.00000000000000, 1.00000000000000, 0, 0, 0, ...
    1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -2.00000000000000, 0, 0, 0, 0, 1.00000000000000, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, 0, ...
    0, 0, 0, -1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    0, 0, 0, 0, -1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00100000000000, -0.100000000000000;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 1, 0
];
 

ki0 = 1.7; kp0 = 0.1; k0 = 20;

nInv = 5;

for i = 1:nInv
    eval(sprintf('k_%d_val = %f;',i,k0))    % k_1_val = 1/mp = 1/(mp_hat/Sn) --> Sn = 1 p.u., mp_hat = 0.01 to 0.05
    eval(sprintf('K_ipll%d_val = %f;',i,ki0))
    eval(sprintf('K_ppll%d_val = %f;',i,kp0))
end

A_sub = subs(A, [k_1, K_ipll1, K_ppll1, k_2, K_ipll2, K_ppll2, k_3, K_ipll3, K_ppll3, k_4, K_ipll4, K_ppll4, k_5, K_ipll5, K_ppll5], [k_1_val, K_ipll1_val, K_ppll1_val, k_2_val, K_ipll2_val, K_ppll2_val, k_3_val, K_ipll3_val, K_ppll3_val, k_4_val, K_ipll4_val, K_ppll4_val, k_5_val, K_ipll5_val, K_ppll5_val]);
A_numeric = double(A_sub);
disp('A with substituted values:');
disp(A_sub);
disp('Numeric result:');
disp(A_numeric);


% prepare the symbolic matrix
syms ki_PLL kp_PLL k_droop

ki_PLL_vec  = sym(NaN(nInv,1));
kp_PLL_vec  = sym(NaN(nInv,1));
k_droop_vec = sym(NaN(nInv,1));

ki_PLL_val  = sym(NaN(nInv,1));
kp_PLL_val  = sym(NaN(nInv,1));
k_droop_val = sym(NaN(nInv,1));

for i = 1:nInv
    eval(sprintf('ki_PLL_vec(%d) = K_ipll%d;', i, i))
    eval(sprintf('kp_PLL_vec(%d) = K_ppll%d;', i, i))
    eval(sprintf('k_droop_vec(%d) = k_%d;', i, i))

    eval(sprintf('ki_PLL_val(%d) = ki_PLL;', i))
    eval(sprintf('kp_PLL_val(%d) = kp_PLL;', i))
    eval(sprintf('k_droop_val(%d) = k_droop;', i))
end

orig_Aq     = vpa(subs(A, [ki_PLL_vec; kp_PLL_vec; k_droop_vec], [ki_PLL_val; kp_PLL_val; k_droop_val]));
q           = [ki_PLL kp_PLL k_droop];
q0          = [ki0 kp0 k0];

% verify accuracy
disp('Eigenvalues:');
[eig(A_numeric) eig(double(subs(orig_Aq, q, q0)))]

% now do transformation to express in relative angles
ref_idx = 1;
rel_idx = [2:nInv 2*nInv+1:3*nInv];

T = eye(length(orig_Aq));
T(rel_idx,ref_idx) = -1;
AqT = T*orig_Aq*inv(T);

% discard the reference angle state
Aq = AqT(setdiff(1:length(AqT),ref_idx),setdiff(1:length(AqT),ref_idx));

% verify
A0 = double(subs(Aq,q,q0));

eig(A0)

if 0
    % ignore k_droop
    Aq = vpa(subs(Aq,q(3),q0(3)));
    q = q(1:2);
    q0 = q0(1:2);

end


% save data
save('example_acdc14bus.mat','Aq','q','q0')
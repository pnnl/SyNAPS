clear all;
clc;

syms K_ppll1 K_ppll2 K_ppll3 K_ppll4 K_ppll5 K_ipll1 K_ipll2 K_ipll3 K_ipll4 K_ipll5 k_1 k_2 k_3 k_4 k_5
A = [
    0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    -0.187156770503826, 0.0614075093503769, 0.0395166088775312, 0.106311311744876, ...
    0.0245950655812286, -0.500000000000000, 0, 0, 0, 0, -0.0179791510761357, ...
    -0.00218867411107335, -0.00222902504660047, -0.00927369636815729, ...
    -0.0130031784482199, -0.0612570808613818.*k_1, -0.0607119202164967.*k_2, ...
    -0.0685784844761953.*k_3, -0.0766088461815295.*k_4, -0.0834736326707189.*k_5, 0, ...
    0, 0, 0, 0, 0.0122475500236421, 0.00151315642976994, 0.00171048554106524, ...
    0.00765642052491868, 0.0107730261186420, 0;
    0.0358915390986569, -0.116324513470074, 0.0320151304640402, 0.0227826237879425, ...
    0.0201179546238376, 0, -0.307692307692308, 0, 0, 0, 0.00228047990623945, ...
    0.000278696529901302, 0.000279137634141154, 0.00113186985613654, ...
    0.00154708156917889, -0.00859522113775351.*k_1, -0.00782435428833194.*k_2, ...
    -0.00654372522205485.*k_3, -0.00633185461226398.*k_4, -0.00674667769470244.*k_5, ...
    0, 0, 0, 0, 0, 0.00171850175308088, 0.000195010666076255, 0.000163213688119836, ...
    0.000632816496142808, 0.000870719683493353, 0;
    0.0249692465529786, 0.0422916508617943, -0.121389288901108, 0.0287873415871876, ...
    0.0223586680229776, 0, 0, -0.400000000000000, 0, 0, 0.00128827049894670, ...
    0.000152757942133457, 0.000145926415041968, 0.000582348415516593, ...
    0.000813078604531055, -0.0123721476574655.*k_1, -0.0114327352206798.*k_2, ...
    -0.0105247921779024.*k_3, -0.0107930872032805.*k_4, -0.0117392062962403.*k_5, 0, ...
    0, 0, 0, 0, 0.00247364868197993, 0.000284944319786614, 0.000262509517095955, ...
    0.00107867979364448, 0.00151505058537947, 0;
    0.0715104725037395, 0.0286825821408940, 0.0253646248585526, -0.178419116460737, ...
    0.0285827404496336, 0, 0, 0, -0.400000000000000, 0, 0.00950050807107567, ...
    0.00123992572690568, 0.00134265658882178, 0.00538137055251705, ...
    0.00681423556859694, -0.00495723288583614.*k_1, -0.0112493403808836.*k_2, ...
    -0.0126890560846231.*k_3, -0.00937245674504884.*k_4, 0.000736021111491732.*k_5, ...
    0, 0, 0, 0, 0, 0.000991133708860708, 0.000280373469778334, 0.000316490618424903, ...
    0.000936699529734018, -9.49901711987403e-5, 0;
    0.0104655551158747, 0.0272087985447790, 0.0226104186097209, 0.0339335354971151, ...
    -0.0966088715109196, 0, 0, 0, 0, -0.400000000000000, 0.00133001824487127, ...
    0.000108887535441361, 5.07700621817465e-5, 0.000231970628197484, ...
    0.000668917272738377, -0.0197882212913186.*k_1, -0.0164758270165537.*k_2, ...
    -0.014136176156268.*k_3, -0.0150156147031998.*k_4, -0.0187603270192474.*k_5, 0, ...
    0, 0, 0, 0, 0.00395639535440404, 0.000410636057910442, 0.000352584707958088, ...
    0.00150068649168049, 0.00242118962007883, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 376.800000000000, 0, 0, ...
    0, 0, 0, 0, 0, 0, 0, 0, 0;
    0.403922158208982.*K_ipll1, 0.104455737449821.*K_ipll1, ...
    0.103468994140292.*K_ipll1, 0.0462548118949498.*K_ipll1, ...
    0.180401467237258.*K_ipll1, 0, 0, 0, 0, 0, -0.921288721453246.*K_ipll1, ...
    0.00732343893760552.*K_ipll1, 0.00682842509291087.*K_ipll1, ...
    0.0282987539168819.*K_ipll1, 0.0403349345745452.*K_ipll1, ...
    -0.0915381854812466.*K_ipll1.*k_1 - 371.127450662416.*K_ppll1, ...
    -0.0279889357642114.*K_ipll1.*k_2, 0.0506410145415813.*K_ipll1.*k_3, ...
    0.063670971542376.*K_ipll1.*k_4, 0.0464207518726539.*K_ipll1.*k_5, 0, 0, 0, 0, ...
    0, 0.0183018598011871.*K_ipll1, 0.00069758357111766.*K_ipll1, ...
    -0.00126308890929657.*K_ipll1, -0.00636338696713194.*K_ipll1, ...
    -0.00599101723946565.*K_ipll1, 0;
    0.415050564280163.*K_ipll2, 0.0948027444355609.*K_ipll2, ...
    0.094014183699441.*K_ipll2, 0.11165411383208.*K_ipll2, ...
    0.14177893192978.*K_ipll2, 0, 0, 0, 0, 0, 0.0613088910076484.*K_ipll2, ...
    -0.996479663802329.*K_ipll2, 0.00721727232430731.*K_ipll2, ...
    0.0296230060509889.*K_ipll2, 0.0410299562423588.*K_ipll2, ...
    -0.0260302399079372.*K_ipll2.*k_1, -0.104457185840082.*K_ipll2.*k_2 - ...
    378.64468576396.*K_ppll2, 0.0322895236164742.*K_ipll2.*k_3, ...
    0.0498577378057694.*K_ipll2.*k_4, 0.0666834568575798.*K_ipll2.*k_5, 0, 0, 0, 0, ...
    0, 0.00520440512209993.*K_ipll2, 0.00260344363719605.*K_ipll2, ...
    -0.000805365760058976.*K_ipll2, -0.00498286850786878.*K_ipll2, ...
    -0.00860610230348871.*K_ipll2, 0;
    0.458606927691731.*K_ipll3, 0.0720279243049536.*K_ipll3, ...
    0.0760142589099055.*K_ipll3, 0.128277412070348.*K_ipll3, ...
    0.098319560919538.*K_ipll3, 0, 0, 0, 0, 0, 0.0637041330193635.*K_ipll3, ...
    0.00786363856873418.*K_ipll3, -0.984786836729007.*K_ipll3, ...
    0.0343661036520376.*K_ipll3, 0.0456068775923947.*K_ipll3, ...
    0.0581101712395129.*K_ipll3.*k_1, 0.0343135028215479.*K_ipll3.*k_2, ...
    -0.103740128647685.*K_ipll3.*k_3 - 374.959256027907.*K_ppll3, ...
    0.014865926200036.*K_ipll3.*k_4, 0.0900398753454346.*K_ipll3.*k_5, 0, 0, 0, 0, ...
    0, -0.0116183667117416.*K_ipll3, -0.000855214218842082.*K_ipll3, ...
    0.00258748777310336.*K_ipll3, -0.00148572636390031.*K_ipll3, ...
    -0.0116204590333577.*K_ipll3, 0;
    0.46436910873957.*K_ipll4, 0.0651598625249506.*K_ipll4, ...
    0.0713093788045208.*K_ipll4, 0.0948636172928418.*K_ipll4, ...
    0.0985114371217573.*K_ipll4, 0, 0, 0, 0, 0, 0.0650013797290741.*K_ipll4, ...
    0.00795050166024749.*K_ipll4, 0.00841023561269464.*K_ipll4, ...
    -0.923558394217792.*K_ipll4, 0.0479828727321343.*K_ipll4, ...
    0.0621943561065807.*K_ipll4.*k_1, 0.0432664284777543.*K_ipll4.*k_2, ...
    0.00664460335647872.*K_ipll4.*k_3, -0.01227328756108.*K_ipll4.*k_4 - ...
    362.165618752785.*K_ppll4, 0.0805086398093372.*K_ipll4.*k_5, 0, 0, 0, 0, 0, ...
    -0.0124349459179628.*K_ipll4, -0.00107835288705801.*K_ipll4, ...
    -0.000165729791992058.*K_ipll4, 0.00122661357629921.*K_ipll4, ...
    -0.0103903670140208.*K_ipll4, 0;
    0.453074307627773.*K_ipll5, 0.0710538531876877.*K_ipll5, ...
    0.0781613403899864.*K_ipll5, 0.00611103989681207.*K_ipll5, ...
    0.137374334570311.*K_ipll5, 0, 0, 0, 0, 0, 0.064302596495025.*K_ipll5, ...
    0.0077864055762093.*K_ipll5, 0.00791054937770631.*K_ipll5, ...
    0.033900885112001.*K_ipll5, -0.859675312233512.*K_ipll5, ...
    0.0304411096234945.*K_ipll5.*k_1, 0.0442155542434901.*K_ipll5.*k_2, ...
    0.0616051269628183.*K_ipll5.*k_3, 0.0624789625299918.*K_ipll5.*k_4, ...
    -0.0729638102765635.*K_ipll5.*k_5 - 344.623428599988.*K_ppll5, 0, 0, 0, 0, 0, ...
    -0.00608630067979557.*K_ipll5, -0.00110200846820192.*K_ipll5, ...
    -0.00153655595818782.*K_ipll5, -0.00624425552574878.*K_ipll5, ...
    0.00941663862798183.*K_ipll5, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.00000000000000, ...
    1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    -3.00000000000000, 1.00000000000000, 0, 0, 0, 1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -3.00000000000000, 1.00000000000000, 0, 0, 0, ...
    1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, -2.00000000000000, 0, 0, 0, 0, 1.00000000000000, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, 0, ...
    0, 0, 0, -1.00000000000000, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.00000000000000, ...
    0, 0, 0, 0, -1.00000000000000, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00000000000000, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    1.00000000000000, 0, 0, 0, 0, -1.00100000000000, -0.100000000000000;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
    0, 0, 1, 0
];

ki0 = 1.7; kp0 = 0.1; k0 = 50;

nInv = 5;

for i = 1:nInv
    eval(sprintf('k_%d_val = %f;',i,k0))    % k_1_val = 1/mp = 1/(mp_hat/Sn) --> Sn = 1 p.u., mp_hat = 0.01 to 0.05
    eval(sprintf('K_ipll%d_val = %f;',i,ki0))
    eval(sprintf('K_ppll%d_val = %f;',i,kp0))
end

A_sub = subs(A, [k_1, K_ipll1, K_ppll1, k_2, K_ipll2, K_ppll2, k_3, K_ipll3, K_ppll3, k_4, K_ipll4, K_ppll4, k_5, K_ipll5, K_ppll5], [k_1_val, K_ipll1_val, K_ppll1_val, k_2_val, K_ipll2_val, K_ppll2_val, k_3_val, K_ipll3_val, K_ppll3_val, k_4_val, K_ipll4_val, K_ppll4_val, k_5_val, K_ipll5_val, K_ppll5_val]);
A_numeric = double(A_sub);
disp('A with substituted values:');
disp(A_sub);
disp('Numeric result:');
disp(A_numeric);


% prepare the symbolic matrix
syms ki_PLL kp_PLL k_droop

ki_PLL_vec  = sym(NaN(nInv,1));
kp_PLL_vec  = sym(NaN(nInv,1));
k_droop_vec = sym(NaN(nInv,1));

ki_PLL_val  = sym(NaN(nInv,1));
kp_PLL_val  = sym(NaN(nInv,1));
k_droop_val = sym(NaN(nInv,1));

for i = 1:nInv
    eval(sprintf('ki_PLL_vec(%d) = K_ipll%d;', i, i))
    eval(sprintf('kp_PLL_vec(%d) = K_ppll%d;', i, i))
    eval(sprintf('k_droop_vec(%d) = k_%d;', i, i))

    eval(sprintf('ki_PLL_val(%d) = ki_PLL;', i))
    eval(sprintf('kp_PLL_val(%d) = kp_PLL;', i))
    eval(sprintf('k_droop_val(%d) = k_droop;', i))
end

orig_Aq     = vpa(subs(A, [ki_PLL_vec; kp_PLL_vec; k_droop_vec], [ki_PLL_val; kp_PLL_val; k_droop_val]));
q           = [ki_PLL kp_PLL k_droop];
q0          = [ki0 kp0 k0];

% verify accuracy
disp('Eigenvalues:');
[eig(A_numeric) eig(double(subs(orig_Aq, q, q0)))]

% now do transformation to express in relative angles
ref_idx = 1;
rel_idx = [2:nInv 2*nInv+1:3*nInv];

T = eye(length(orig_Aq));
T(rel_idx,ref_idx) = -1;
AqT = T*orig_Aq*inv(T);

% discard the reference angle state
Aq = AqT(setdiff(1:length(AqT),ref_idx),setdiff(1:length(AqT),ref_idx));

% verify
A0 = double(subs(Aq,q,q0));

eig(A0)

if 0
    % ignore k_droop
    Aq = vpa(subs(Aq,q(3),q0(3)));
    q = q(1:2);
    q0 = q0(1:2);

end


% save data
save('example_acdc14bus.mat','Aq','q','q0')